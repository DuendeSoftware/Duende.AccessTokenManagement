@using Duende.TokenManagement.OpenIdConnect
@using System.Security.Claims
@inject IUserService UserService

@code {
    [Parameter]
    public string UserSub { get; set; }

    protected override Task OnInitializedAsync()
    {
        ClaimsPrincipal principal;
        
        if (!string.IsNullOrEmpty(UserSub))
        {
            var id = new ClaimsIdentity(new[] { new Claim("sub", UserSub) }, "internal", "name", "role");
            principal = new ClaimsPrincipal(id);
        }
        else
        {
            var id = new ClaimsIdentity();
            principal = new ClaimsPrincipal(id);
        }
        
        UserService.Principal = principal;

        return base.OnInitializedAsync();
    }
}

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
            <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>